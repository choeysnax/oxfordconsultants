# Generated by Django 5.0.7 on 2024-07-15 09:58

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Insight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=140)),
                ('text', models.TextField()),
                ('tag', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('url', models.URLField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PossibleAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordering', models.IntegerField(default=0)),
                ('text', models.CharField(max_length=100)),
                ('consensus', models.TextField(blank=True)),
            ],
            options={
                'ordering': ('ordering',),
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(blank=True, max_length=140)),
                ('company_name', models.CharField(blank=True, max_length=140)),
                ('text', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='uploads/')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordering', models.IntegerField(default=0)),
                ('text', models.TextField()),
                ('voting_stopped', models.BooleanField(default=False)),
                ('next_resolution_launched', models.BooleanField(default=False)),
                ('slug', models.SlugField(null=True)),
                ('stats', models.JSONField(default=dict)),
                ('consensus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='frontend.possibleanswer')),
                ('possible_answers', models.ManyToManyField(to='frontend.possibleanswer')),
            ],
        ),
        migrations.CreateModel(
            name='PersonToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=150)),
                ('weight', models.IntegerField(default=0)),
                ('is_chairman', models.BooleanField(default=False)),
                ('questions_to_skip', models.ManyToManyField(blank=True, to='frontend.question')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.possibleanswer')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.persontoken')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.question')),
            ],
        ),
    ]
